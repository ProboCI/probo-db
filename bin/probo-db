#! /usr/bin/env node
'use strict';

const Riker = require('riker');
const util = require('util');
const path = require('path');
const Loader = require('yaml-config-loader');
const yargs = require('yargs');
const loader = new Loader();

const probodb = require('..');
const Server = probodb.lib.Server;
const Db = probodb.lib.Db;


const argv = yargs
  .describe('config', 'A YAML config file or directory of yaml files to load, can be invoked multiple times and later files will override earlier.')
  .alias('config', 'c')
  .argv;

loader.on('error', function(error) {
  if (error.name === 'YAMLException') {
    console.error(util.print('Error parsing YAML file `', error.filePath, '`:', error.reason));
    console.log(error);
  }
});

loader.add(path.resolve(path.join(__dirname, '..', 'defaults.yaml')));

if (argv.config) {
  loader.add(path.resolve(argv.config));
}

loader.addAndNormalizeObject({});

loader.load(function(error, config) {
  let db = new Db(config);
  let server = new Server({config, db});
  server.start();
  // const riker = new Riker();
  // let serverCommand = new ServerCommand();
  // ServerCommand.configure(config);
  // riker.addSubCommand('server', serverCommand);
  // riker.run();
});
